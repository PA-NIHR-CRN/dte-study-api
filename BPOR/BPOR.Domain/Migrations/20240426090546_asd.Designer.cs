// <auto-generated />
using System;
using BPOR.Domain.Entities;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NetTopologySuite.Geometries;

#nullable disable

namespace Dynamo.Stream.Handler.Migrations
{
    [DbContext(typeof(ParticipantDbContext))]
    [Migration("20240426090546_asd")]
    partial class asd
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("BPOR.Domain.Entities.EmailCampaign", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("CreatedById")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<Guid>("EmailTemplateId")
                        .HasColumnType("char(36)");

                    b.Property<int>("FilterCriteriaId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("PreviewRecipients")
                        .HasColumnType("longtext");

                    b.Property<int?>("TargetGroupSize")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("UpdatedById")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FilterCriteriaId");

                    b.ToTable("EmailCampaigns");
                });

            modelBuilder.Entity("BPOR.Domain.Entities.EmailCampaignParticipant", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ContactEmail")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("CreatedById")
                        .HasColumnType("int");

                    b.Property<DateTime>("DeliveredAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("DeliveryStatusId")
                        .HasColumnType("int");

                    b.Property<int>("EmailCampaignId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("ParticipantId")
                        .HasColumnType("int");

                    b.Property<DateTime>("RegisteredInterestAt")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("SentAt")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("UpdatedById")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DeliveryStatusId");

                    b.HasIndex("EmailCampaignId");

                    b.HasIndex("ParticipantId");

                    b.ToTable("EmailCampaignParticipant");
                });

            modelBuilder.Entity("BPOR.Domain.Entities.EngagementPreferences", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<bool>("CanContactAboutResearch")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("CanContactForFeedback")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("CreatedById")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("UpdatedById")
                        .HasColumnType("int");

                    b.Property<string>("WhereDidYouHear")
                        .HasColumnType("longtext");

                    b.HasKey("UserId");

                    b.ToTable("EngagementPreferences");
                });

            modelBuilder.Entity("BPOR.Domain.Entities.FilterCriteria", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool?>("CompletedRegistration")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool?>("Contacted")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime?>("DateOfBirthFrom")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("DateOfBirthTo")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("EthnicGroup")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("FullPostcode")
                        .HasColumnType("longtext");

                    b.Property<int?>("GenderId")
                        .HasColumnType("int");

                    b.Property<bool?>("GenderIsSameAsSexRegisteredAtBirth")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("PostcodeDistricts")
                        .HasColumnType("longtext");

                    b.Property<bool?>("Recruited")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool?>("RegisteredInterest")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime?>("RegistrationFromDate")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("RegistrationToDate")
                        .HasColumnType("datetime(6)");

                    b.Property<decimal?>("SearchRadiusMiles")
                        .HasColumnType("decimal(65,30)");

                    b.Property<int?>("StudyId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("GenderId");

                    b.HasIndex("StudyId");

                    b.ToTable("FilterCriterias");
                });

            modelBuilder.Entity("BPOR.Domain.Entities.ManualEnrollment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("StudyId")
                        .HasColumnType("int");

                    b.Property<int>("TotalEnrollments")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("StudyId");

                    b.ToTable("ManualEnrollments");
                });

            modelBuilder.Entity("BPOR.Domain.Entities.Participant", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CommunicationLanguageId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("DailyLifeImpactId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DateOfBirth")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Email")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("EthnicBackground")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("EthnicGroup")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("FirstName")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<int?>("GenderId")
                        .HasColumnType("int");

                    b.Property<bool?>("GenderIsSameAsSexRegisteredAtBirth")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool?>("HasLongTermCondition")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("LandlineNumber")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("LastName")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("MobileNumber")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("NHSNumber")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<bool>("RegistrationConsent")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime?>("RegistrationConsentAtUtc")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("RemovalOfConsentRegistrationAtUtc")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("Stage2CompleteUtc")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("CommunicationLanguageId");

                    b.HasIndex("DailyLifeImpactId");

                    b.HasIndex("GenderId");

                    b.ToTable("Participants");
                });

            modelBuilder.Entity("BPOR.Domain.Entities.ParticipantAddress", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AddressLine1")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("AddressLine2")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("AddressLine3")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("AddressLine4")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("ParticipantId")
                        .HasColumnType("int");

                    b.Property<string>("Postcode")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Town")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("ParticipantId")
                        .IsUnique();

                    b.ToTable("ParticipantAddress");
                });

            modelBuilder.Entity("BPOR.Domain.Entities.ParticipantHealthCondition", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("FilterCriteriaId")
                        .HasColumnType("int");

                    b.Property<int>("HealthConditionId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("ParticipantId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("FilterCriteriaId");

                    b.HasIndex("HealthConditionId");

                    b.HasIndex("ParticipantId");

                    b.ToTable("ParticipantHealthCondition");
                });

            modelBuilder.Entity("BPOR.Domain.Entities.ParticipantIdentifier", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("IdentifierTypeId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("ParticipantId")
                        .HasColumnType("int");

                    b.Property<Guid>("Value")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("IdentifierTypeId");

                    b.HasIndex("ParticipantId");

                    b.ToTable("ParticipantIdentifiers");
                });

            modelBuilder.Entity("BPOR.Domain.Entities.ParticipantLocation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("IsApproximate")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<Point>("Location")
                        .IsRequired()
                        .HasColumnType("point");

                    b.Property<int>("ParticipantId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("ParticipantId")
                        .IsUnique();

                    b.ToTable("ParticipantLocation");
                });

            modelBuilder.Entity("BPOR.Domain.Entities.RefData.CommunicationLanguage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Description")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("Id");

                    b.ToTable("SysRefCommunicationLanguage", (string)null);
                });

            modelBuilder.Entity("BPOR.Domain.Entities.RefData.DailyLifeImpact", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Description")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("Id");

                    b.ToTable("SysRefDailyLifeImpact", (string)null);
                });

            modelBuilder.Entity("BPOR.Domain.Entities.RefData.EmailDeliveryStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Description")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("Id");

                    b.ToTable("SysRefEmailDeliveryStatus", (string)null);
                });

            modelBuilder.Entity("BPOR.Domain.Entities.RefData.Gender", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Description")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("Id");

                    b.ToTable("SysRefGender", (string)null);
                });

            modelBuilder.Entity("BPOR.Domain.Entities.RefData.HealthCondition", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Description")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("Id");

                    b.ToTable("SysRefHealthCondition", (string)null);
                });

            modelBuilder.Entity("BPOR.Domain.Entities.RefData.IdentifierType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Description")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("Id");

                    b.ToTable("SysRefIdentifierType", (string)null);
                });

            modelBuilder.Entity("BPOR.Domain.Entities.RefData.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Description")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("Id");

                    b.ToTable("SysRefRole", (string)null);
                });

            modelBuilder.Entity("BPOR.Domain.Entities.SourceReference", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ParticipantId")
                        .HasColumnType("int");

                    b.Property<string>("Pk")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("ParticipantId");

                    b.ToTable("SourceReference");
                });

            modelBuilder.Entity("BPOR.Domain.Entities.Study", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<long?>("CpmsId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("CreatedById")
                        .HasColumnType("int");

                    b.Property<string>("EmailAddress")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsRecruitingIdentifiableParticipants")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("StudyName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("UpdatedById")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Studies");
                });

            modelBuilder.Entity("BPOR.Domain.Entities.StudyParticipantEnrollment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("CreatedById")
                        .HasColumnType("int");

                    b.Property<DateTime>("EnrolledAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("ParticipantId")
                        .HasColumnType("int");

                    b.Property<string>("Reference")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("StudyId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("UpdatedById")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ParticipantId");

                    b.HasIndex("StudyId");

                    b.ToTable("StudyParticipantEnrollment");
                });

            modelBuilder.Entity("BPOR.Domain.Entities.StudyResearcher", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("CreatedById")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("StudyId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("UpdatedById")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("StudyId");

                    b.HasIndex("UserId");

                    b.ToTable("StudyResearcher");
                });

            modelBuilder.Entity("BPOR.Domain.Entities.System.SysConfiguration", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("SysConfigurations");
                });

            modelBuilder.Entity("BPOR.Domain.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AuthenticationId")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("ContactEmail")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("ContactFullName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("CreatedById")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("UpdatedById")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("User");
                });

            modelBuilder.Entity("BPOR.Domain.Entities.UserRole", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("CreatedById")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("UpdatedById")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.HasIndex("UserId");

                    b.ToTable("UserRole");
                });

            modelBuilder.Entity("BPOR.Domain.Entities.EmailCampaign", b =>
                {
                    b.HasOne("BPOR.Domain.Entities.FilterCriteria", null)
                        .WithMany("EmailCampaigns")
                        .HasForeignKey("FilterCriteriaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("BPOR.Domain.Entities.EmailCampaignParticipant", b =>
                {
                    b.HasOne("BPOR.Domain.Entities.RefData.EmailDeliveryStatus", "DeliveryStatus")
                        .WithMany()
                        .HasForeignKey("DeliveryStatusId");

                    b.HasOne("BPOR.Domain.Entities.EmailCampaign", "EmailCampaign")
                        .WithMany("Participants")
                        .HasForeignKey("EmailCampaignId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BPOR.Domain.Entities.Participant", "Participant")
                        .WithMany("EmailCampaignParticipants")
                        .HasForeignKey("ParticipantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DeliveryStatus");

                    b.Navigation("EmailCampaign");

                    b.Navigation("Participant");
                });

            modelBuilder.Entity("BPOR.Domain.Entities.EngagementPreferences", b =>
                {
                    b.HasOne("BPOR.Domain.Entities.User", null)
                        .WithOne("EngagementPreferences")
                        .HasForeignKey("BPOR.Domain.Entities.EngagementPreferences", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("BPOR.Domain.Entities.FilterCriteria", b =>
                {
                    b.HasOne("BPOR.Domain.Entities.RefData.Gender", "Gender")
                        .WithMany()
                        .HasForeignKey("GenderId");

                    b.HasOne("BPOR.Domain.Entities.Study", "Study")
                        .WithMany("FilterCriterias")
                        .HasForeignKey("StudyId");

                    b.Navigation("Gender");

                    b.Navigation("Study");
                });

            modelBuilder.Entity("BPOR.Domain.Entities.ManualEnrollment", b =>
                {
                    b.HasOne("BPOR.Domain.Entities.Study", "Study")
                        .WithMany("ManualEnrollments")
                        .HasForeignKey("StudyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Study");
                });

            modelBuilder.Entity("BPOR.Domain.Entities.Participant", b =>
                {
                    b.HasOne("BPOR.Domain.Entities.RefData.CommunicationLanguage", "CommunicationLanguage")
                        .WithMany()
                        .HasForeignKey("CommunicationLanguageId");

                    b.HasOne("BPOR.Domain.Entities.RefData.DailyLifeImpact", "DailyLifeImpact")
                        .WithMany()
                        .HasForeignKey("DailyLifeImpactId");

                    b.HasOne("BPOR.Domain.Entities.RefData.Gender", "Gender")
                        .WithMany()
                        .HasForeignKey("GenderId");

                    b.Navigation("CommunicationLanguage");

                    b.Navigation("DailyLifeImpact");

                    b.Navigation("Gender");
                });

            modelBuilder.Entity("BPOR.Domain.Entities.ParticipantAddress", b =>
                {
                    b.HasOne("BPOR.Domain.Entities.Participant", "Participant")
                        .WithOne("Address")
                        .HasForeignKey("BPOR.Domain.Entities.ParticipantAddress", "ParticipantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Participant");
                });

            modelBuilder.Entity("BPOR.Domain.Entities.ParticipantHealthCondition", b =>
                {
                    b.HasOne("BPOR.Domain.Entities.FilterCriteria", null)
                        .WithMany("HealthConditions")
                        .HasForeignKey("FilterCriteriaId");

                    b.HasOne("BPOR.Domain.Entities.RefData.HealthCondition", "HealthCondition")
                        .WithMany()
                        .HasForeignKey("HealthConditionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BPOR.Domain.Entities.Participant", "Participant")
                        .WithMany("HealthConditions")
                        .HasForeignKey("ParticipantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("HealthCondition");

                    b.Navigation("Participant");
                });

            modelBuilder.Entity("BPOR.Domain.Entities.ParticipantIdentifier", b =>
                {
                    b.HasOne("BPOR.Domain.Entities.RefData.IdentifierType", "Type")
                        .WithMany()
                        .HasForeignKey("IdentifierTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BPOR.Domain.Entities.Participant", "Participant")
                        .WithMany("ParticipantIdentifiers")
                        .HasForeignKey("ParticipantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Participant");

                    b.Navigation("Type");
                });

            modelBuilder.Entity("BPOR.Domain.Entities.ParticipantLocation", b =>
                {
                    b.HasOne("BPOR.Domain.Entities.Participant", "Participant")
                        .WithOne("ParticipantLocation")
                        .HasForeignKey("BPOR.Domain.Entities.ParticipantLocation", "ParticipantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Participant");
                });

            modelBuilder.Entity("BPOR.Domain.Entities.SourceReference", b =>
                {
                    b.HasOne("BPOR.Domain.Entities.Participant", "Participant")
                        .WithMany("SourceReferences")
                        .HasForeignKey("ParticipantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Participant");
                });

            modelBuilder.Entity("BPOR.Domain.Entities.StudyParticipantEnrollment", b =>
                {
                    b.HasOne("BPOR.Domain.Entities.Participant", null)
                        .WithMany("StudyParticipantEnrollments")
                        .HasForeignKey("ParticipantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BPOR.Domain.Entities.Study", null)
                        .WithMany("StudyParticipantEnrollments")
                        .HasForeignKey("StudyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("BPOR.Domain.Entities.StudyResearcher", b =>
                {
                    b.HasOne("BPOR.Domain.Entities.Study", "Study")
                        .WithMany("StudyResearchers")
                        .HasForeignKey("StudyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BPOR.Domain.Entities.User", "User")
                        .WithMany("StudyResearchers")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Study");

                    b.Navigation("User");
                });

            modelBuilder.Entity("BPOR.Domain.Entities.UserRole", b =>
                {
                    b.HasOne("BPOR.Domain.Entities.RefData.Role", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BPOR.Domain.Entities.User", "User")
                        .WithMany("UserRoles")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");

                    b.Navigation("User");
                });

            modelBuilder.Entity("BPOR.Domain.Entities.EmailCampaign", b =>
                {
                    b.Navigation("Participants");
                });

            modelBuilder.Entity("BPOR.Domain.Entities.FilterCriteria", b =>
                {
                    b.Navigation("EmailCampaigns");

                    b.Navigation("HealthConditions");
                });

            modelBuilder.Entity("BPOR.Domain.Entities.Participant", b =>
                {
                    b.Navigation("Address");

                    b.Navigation("EmailCampaignParticipants");

                    b.Navigation("HealthConditions");

                    b.Navigation("ParticipantIdentifiers");

                    b.Navigation("ParticipantLocation");

                    b.Navigation("SourceReferences");

                    b.Navigation("StudyParticipantEnrollments");
                });

            modelBuilder.Entity("BPOR.Domain.Entities.Study", b =>
                {
                    b.Navigation("FilterCriterias");

                    b.Navigation("ManualEnrollments");

                    b.Navigation("StudyParticipantEnrollments");

                    b.Navigation("StudyResearchers");
                });

            modelBuilder.Entity("BPOR.Domain.Entities.User", b =>
                {
                    b.Navigation("EngagementPreferences");

                    b.Navigation("StudyResearchers");

                    b.Navigation("UserRoles");
                });
#pragma warning restore 612, 618
        }
    }
}
