@model BPOR.Rms.Models.Researcher.ResearcherStudyFormViewModel

<h1 class="govuk-heading-xl">
    Study recruitment
</h1>

@await Html.PartialAsync("Partials/_ErrorSummary", Model)

<div class="govuk-form-group  @(Html.ViewData.ModelState["RecruitmentStartDateDay"]?.Errors.Count > 0 || Html.ViewData.ModelState["RecruitmentStartDateMonth"]?.Errors.Count > 0 || Html.ViewData.ModelState["RecruitmentStartDateYear"]?.Errors.Count > 0 ? "govuk-form-group--error" : "")">
    <label asp-for="UKRecruitmentTarget" class="govuk-label" for="UKRecruitmentTarget">
        Recruitment start date (UK)?
    </label>
    <div id="event-name-hint" class="govuk-hint">
        If you are unsure, provide an estimate.
    </div>
    @if (Html.ViewData.ModelState["RecruitmentStartDateDay"]?.Errors.Count > 0)
    {
        <span id="RecruitmentStartDateDay-error" class="govuk-error-message">
            <span class="govuk-visually-hidden">Error:</span>
            @Html.ValidationMessageFor(model => model.RecruitmentStartDateDay)
        </span>
    }
    @if (Html.ViewData.ModelState["RecruitmentStartDateMonth"]?.Errors.Count > 0)
    {
        <span id="RecruitmentStartDateMonth-error" class="govuk-error-message">
            <span class="govuk-visually-hidden">Error:</span>
            @Html.ValidationMessageFor(model => model.RecruitmentStartDateMonth)
        </span>
    }
    @if (Html.ViewData.ModelState["RecruitmentStartDateYear"]?.Errors.Count > 0)
    {
        <span id="RecruitmentStartDateYear-error" class="govuk-error-message">
            <span class="govuk-visually-hidden">Error:</span>
            @Html.ValidationMessageFor(model => model.RecruitmentStartDateYear)
        </span>
    }
    <div class="govuk-date-input" id="registration-date-from">
        <!-- Day -->
        <div class="govuk-date-input__item">
            <label class="govuk-label govuk-label--n" asp-for="RecruitmentStartDateDay">@Html.DisplayNameFor(model => model.RecruitmentStartDateDay)</label>
            <input class="govuk-input govuk-date-input__input govuk-input--width-3" asp-for="RecruitmentStartDateDay" autocomplete="off" type="text" inputmode="numeric">

        </div>
        <!-- Month -->
        <div class="govuk-date-input__item">
            <label class="govuk-label govuk-label--n" asp-for="RecruitmentStartDateMonth">@Html.DisplayNameFor(model => model.RecruitmentStartDateMonth)</label>
            <input class="govuk-input govuk-date-input__input govuk-input--width-3" asp-for="RecruitmentStartDateMonth" autocomplete="off" type="text" inputmode="numeric">

        </div>
        <!-- Year -->
        <div class="govuk-date-input__item">
            <label class="govuk-label govuk-label--n" asp-for="RecruitmentStartDateYear">@Html.DisplayNameFor(model => model.RecruitmentStartDateYear)</label>
            <input class="govuk-input govuk-date-input__input govuk-input--width-4" asp-for="RecruitmentStartDateYear" autocomplete="off" type="text" inputmode="numeric">

        </div>
    </div>
</div>

<div class="govuk-form-group  @(Html.ViewData.ModelState["RecruitmentEndDateDay"]?.Errors.Count > 0 || Html.ViewData.ModelState["RecruitmentEndDateMonth"]?.Errors.Count > 0 || Html.ViewData.ModelState["RecruitmentEndDateYear"]?.Errors.Count > 0 ? "govuk-form-group--error" : "")">
    <label asp-for="UKRecruitmentTarget" class="govuk-label" for="UKRecruitmentTarget">
        Recruitment end date (UK)?
    </label>
    <div id="event-name-hint" class="govuk-hint">
        If you are unsure, provide an estimate.
    </div>
    @if (Html.ViewData.ModelState["RecruitmentEndDateDay"]?.Errors.Count > 0)
    {
        <span id="RecruitmentEndDateDay-error" class="govuk-error-message">
            <span class="govuk-visually-hidden">Error:</span>
            @Html.ValidationMessageFor(model => model.RecruitmentEndDateDay)
        </span>
    }
    @if (Html.ViewData.ModelState["RecruitmentEndDateMonth"]?.Errors.Count > 0)
    {
        <span id="RecruitmentEndDateMonth-error" class="govuk-error-message">
            <span class="govuk-visually-hidden">Error:</span>
            @Html.ValidationMessageFor(model => model.RecruitmentEndDateMonth)
        </span>
    }
    @if (Html.ViewData.ModelState["RecruitmentEndDateYear"]?.Errors.Count > 0)
    {
        <span id="RecruitmentEndDateYear-error" class="govuk-error-message">
            <span class="govuk-visually-hidden">Error:</span>
            @Html.ValidationMessageFor(model => model.RecruitmentEndDateYear)
        </span>
    }
    <div class="govuk-date-input" id="registration-date-from">
        <!-- Day -->
        <div class="govuk-date-input__item">
            <label class="govuk-label govuk-label--n" asp-for="RecruitmentEndDateDay">@Html.DisplayNameFor(model => model.RecruitmentEndDateDay)</label>
            <input class="govuk-input govuk-date-input__input govuk-input--width-3" asp-for="RecruitmentEndDateDay" autocomplete="off" type="text" inputmode="numeric">

        </div>
        <!-- Month -->
        <div class="govuk-date-input__item">
            <label class="govuk-label govuk-label--n" asp-for="RecruitmentEndDateMonth">@Html.DisplayNameFor(model => model.RecruitmentEndDateMonth)</label>
            <input class="govuk-input govuk-date-input__input govuk-input--width-3" asp-for="RecruitmentEndDateMonth" autocomplete="off" type="text" inputmode="numeric">

        </div>
        <!-- Year -->
        <div class="govuk-date-input__item">
            <label class="govuk-label govuk-label--n" asp-for="RecruitmentEndDateYear">@Html.DisplayNameFor(model => model.RecruitmentEndDateYear)</label>
            <input class="govuk-input govuk-date-input__input govuk-input--width-4" asp-for="RecruitmentEndDateYear" autocomplete="off" type="text" inputmode="numeric">

        </div>
    </div>
</div>

<div class="govuk-form-group @(Html.ViewData.ModelState["RecruitingIdentifiableVolunteers"]?.Errors.Count > 0 ? "govuk-form-group--error" : "")">
    <label asp-for="RecruitingIdentifiableVolunteers" class="govuk-label" for="RecruitingIdentifiableVolunteers">
        @Html.DisplayNameFor(model => model.RecruitingIdentifiableVolunteers)
    </label>

    <div class="govuk-radios" data-module="govuk-radios">
        <div class="govuk-radios__item">
            @Html.RadioButtonFor(m => m.RecruitingIdentifiableVolunteers, true, new { @class = "govuk-radios__input", id = "recruitingIdentifiableYes" })
            @Html.Label("Yes", "Yes", new { @class = "govuk-label govuk-radios__label" })
        </div>
        <div class="govuk-radios__item">
            @Html.RadioButtonFor(m => m.RecruitingIdentifiableVolunteers, false, new { @class = "govuk-radios__input", id = "recruitingIdentifiableNo" })
            @Html.Label("No", "No", new { @class = "govuk-label govuk-radios__label" })
        </div>
    </div>
</div>