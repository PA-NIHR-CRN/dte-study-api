@using BPOR.Rms.Views.ViewComponents
@model BPOR.Rms.Models.Volunteer.UpdateRecruitedViewModel

@await Component.InvokeAsync("Breadcrumbs", new List<BreadcrumbItem>
{
    new("All Studies", "/Study/Index"),
    new("Study", $"/Study/Details/{Model.StudyId}"),
    new("Update newly recruited volunteers", "/Study/Edit")
})

<h1 class="govuk-heading-xl">Update recruited volunteers</h1>
<h4>
    @Html.DisplayFor(model => model.StudyName)
</h4>
<h5 class="govuk-heading-m">Enter Be Part of Research volunteer reference numbers</h5>
<p class="govuk-body">
    Each volunteer will have been given a unique volunteer reference when they were contacted by Be Part of Research.
</p>
<p class="govuk-body">
    Please enter your list of these numbers into the text area below. Each number should be on its own line.
</p>
<p class="govuk-body">
    For example,
    <br>9834342
    <br>9374897
    <br>3473874
    <br>8347438
</p>

<form asp-action="SubmitVolunteerNumbers" asp-controller="Volunteer" method="post">
    <div class="govuk-form-group @(Html.ViewData.ModelState["VolunteerReferenceNumbers"]?.Errors.Count > 0 ? "govuk-form-group--error" : "")">
        @if (Html.ViewData.ModelState["VolunteerReferenceNumbers"]?.Errors.Count > 0)
        {
            <span class="govuk-error-message">
                <span class="govuk-visually-hidden">Error:</span>
                @Html.ValidationMessageFor(model => model.VolunteerReferenceNumbers)
            </span>
        }
        <textarea asp-for="VolunteerReferenceNumbers" class="govuk-textarea @(Html.ViewData.ModelState["VolunteerReferenceNumbers"]?.Errors.Count > 0 ? "govuk-textarea--error" : "")" aria-describedby="@(Html.ViewData.ModelState["VolunteerReferenceNumbers"]?.Errors.Count > 0 ? "study-name-error" : "")"></textarea>
    </div>
    <button type="submit" class="govuk-button">Submit volunteer numbers</button>
</form>
