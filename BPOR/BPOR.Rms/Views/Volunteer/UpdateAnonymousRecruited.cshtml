@using BPOR.Rms.Views.ViewComponents
@model BPOR.Rms.Models.Volunteer.UpdateAnonymousRecruitedViewModel

@{
    ViewData.AddBreadcrumbs(new Dictionary<string, string> { 
        ["All Studies"] = "/Study/Index",
        ["Study"] = $"/Study/Details/{Model.StudyId}",
        ["Update newly recruited volunteers"] = "/Study/Edit",
    });
}

<div style="display: flex;flex-direction: column;gap: 50px;width: 100% ;">

    <div>
        <h3 class="govuk-heading-xl govuk-!-margin-bottom-0">Update recruited volunteers</h3>
        <h4 class="text-secondary govuk-!-margin-0">
            @Html.DisplayFor(model => model.StudyName)
        </h4>
    </div>

    @await Html.PartialAsync("Partials/_NotificationBanner", Model.Notification)
    @await Html.PartialAsync("Partials/_ErrorSummary", Model)

    <h4 class="govuk-heading-m govuk-!-margin-bottom-4 govuk-!-margin-top-0">
        Recruited (@Model.LatestRecruitmentTotal)
    </h4>


    @await Html.PartialAsync("Partials/_RecruitedTable", Model.EnrollmentDetails)
    <form asp-action="UpdateRecruitmentTotal" asp-controller="Volunteer" method="post">

        <div class="govuk-form-group @(Html.ViewData.ModelState["RecruitmentTotal"]?.Errors.Count > 0 ? "govuk-form-group--error" : "")">
            <input asp-for="StudyId" type="hidden" />
            <input asp-for="StudyName" type="hidden" />
            <label asp-for="RecruitmentTotal" class="govuk-label" for="RecruitmentTotal">
                @Html.DisplayNameFor(model => model.RecruitmentTotal)
            </label>
            <div id="RecruitmentTotal-hint" class="govuk-hint">
                Enter the total number of Be Part of Research volunteers recruited to date
            </div>
            <div class="govuk-grid-column-one-quarter-from-desktop">
                <div class="govuk-grid-row">
                    @if (Html.ViewData.ModelState["RecruitmentTotal"]?.Errors.Count > 0)
                    {
                        <span id="RecruitmentTotal-error" class="govuk-error-message">
                            <span class="govuk-visually-hidden">Error:</span>
                            @Html.ValidationMessageFor(model => model.RecruitmentTotal)
                        </span>
                        <input asp-for="RecruitmentTotal" class="govuk-input  govuk-input govuk-input--error" id="RecruitmentTotal" aria-describedby="RecruitmentTotal-error" value="@(Model.RecruitmentTotal)" />
                    }
                    else
                    {
                        <input asp-for="RecruitmentTotal" class="govuk-input" id="RecruitmentTotal" value="@(Model.RecruitmentTotal)" />
                    }
                </div>
            </div>
        </div>
        <button type="submit" class="govuk-button">
            Update recruitment total
        </button>
    </form>
</div>
