@model BPOR.Rms.Models.Study.StudyFormViewModel

@{
    ViewData["Title"] = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<div class="govuk-grid-column-full">
    <div class="govuk-grid-row split-row">
        <a asp-action="Index" class="govuk-back-link">Back</a>
        <p class="govuk-body">0%</p>
    </div>
</div>

<h1 class="govuk-heading-xl">Add a study to use the Be Part of Research registry</h1>

<div class="govuk-grid-column-one-half">
    @if (!ViewData.ModelState.IsValid)
    {
        <div class="govuk-error-summary" aria-labelledby="error-summary-title" role="alert" tabindex="-1" data-module="govuk-error-summary">
            <h2 class="govuk-error-summary__title" id="error-summary-title">
                There is a problem
            </h2>
            <div class="govuk-error-summary__body">
                <ul class="govuk-list govuk-error-summary__list">
                    @foreach (var error in ViewData.ModelState.Where(ms => ms.Value.Errors.Count > 0))
                    {
                        <li>
                            <a href="#@error.Key">@error.Value.Errors[0].ErrorMessage</a>
                        </li>
                    }
                </ul>
            </div>
        </div>
    }
    <form asp-action="Create">
        <div asp-validation-summary="ModelOnly" class="text-danger"></div>
        <input type="hidden" asp-for="Step" value="@Model.Step"/>

        <div style="@(Model.Step == 1 ? "" : "display:none;")">
            @await Html.PartialAsync("Partials/Create/_Step1FormFields", Model)
        </div>

        <div style="@(Model.Step == 2 ? "" : "display:none;")">
            @await Html.PartialAsync("Partials/Create/_Step2FormFields", Model);
        </div>


        <div class="govuk-button-group">
            @if (Model.Step == 1)
            {
                @Html.ActionLink("Cancel", "Index", "Study", null, new { @class = "govuk-button govuk-button--inverse", data_module = "govuk-button" })
                <button type="submit" name="action" value="Next" class="govuk-button" data_module="govuk-button">Next</button>
            }
            else if (Model.Step == 2)
            {
                <button type="submit" name="action" value="Back" class="govuk-button" data_module="govuk-button">Back</button>
                <button type="submit" name="action" value="Save" class="govuk-button" data_module="govuk-button">Save</button>
            }

        </div>
    </form>
</div>
