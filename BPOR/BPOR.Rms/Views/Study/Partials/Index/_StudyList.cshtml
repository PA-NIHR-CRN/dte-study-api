@model BPOR.Rms.Models.Study.StudiesViewModel

<style>
@@media screen and (max-width: 768px) {
    .study-card {
        flex-direction: column;
    }
    .study-card-info {
        border-right: none;
        margin-right: 0;
        padding-right: 0;
        border-bottom: 1px solid #ACBCC3;
        gap: 0px;
        padding-bottom: 10px;
    }
    .study-card-actions {
        width: 100%;
        align-items: center;
        justify-content: center;
    }

    .study-contact-container {
        flex-direction: column;
    }
    .study-name-container {
        font-size: 18px;
        font-style: normal;
        font-weight: 700;
        order: -1;
        padding-bottom: 10px;
    }
    .study-card-recruited-numbers {
    margin-top: 10px;
    margin-bottom: 10px;
  
    }
    .govuk-body {
        margin-bottom: 0px;
    }
    
}

@@media screen and (min-width: 769px) {
.study-name-container {
        font-size: 24px;
        font-weight: 700;
        }
    .study-card {
        flex-direction: row;
        justify-content: space-between;
    }
    .study-card-info {
        flex: 1;
        border-right: 1px solid #ACBCC3;
        margin-right: 20px;
        padding-right: 20px;
         gap: 10px;
    }
    .study-card-actions {
        width: 154px;
        flex-direction: column;
        justify-content: space-between;
    }

    .study-contact-container {
        flex-direction: row;
        gap: 20px;
    }
}

    .no-studies-card {
        box-shadow: 0px 0px 4px rgba(11, 12, 12, 0.25);
        flex-direction: column;
        justify-content: center;
        align-items: center;
        display: flex;
        padding: 60px;
        gap: 28px;
        align-self: stretch;
        border-radius: 10px;
        border: 1px solid #ACBCC3;
        background: #EEF2F3;
    }
    .study-card-container {
        gap: 15px;
        display: flex;
        flex-direction: column;
    }
    .study-card {
        padding: 20px;
        background: white;
        border-radius: 10px;
        border: 1px #ACBCC3 solid;
        justify-content: flex-start;
        align-items: flex-start;
        display: flex;
        align-self: stretch;
        box-shadow: 0px 0px 4px 0px rgba(11, 12, 12, 0.25);
    }
    .study-card-info {
        flex: 1 1 0;
        align-self: stretch;
        flex-direction: column;
        justify-content: flex-start;
        align-items: flex-start;
       
        display: flex;
        margin-right: 20px;
    }
    .study-card-actions {
        align-self: stretch;
        align-items: flex-start;
        display: flex;
        flex-direction: column;
       
    }
    
    .study-name-container {
        align-self: stretch;
        flex: 1 1 0;
        color: #0B0C0C;
        word-wrap: break-word;
        font-feature-settings: 'clig' off, 'liga' off;
        font-style: normal;
    }
    .study-contact-container {
        justify-content: flex-start;
        align-items: flex-start;
        display: inline-flex;
    }
    .study-card-recruited-numbers {
        flex-direction: column;
        justify-content: flex-start;
        align-items: flex-start;
        display: inline-flex;
    }
    .contact-text {
    color:  #505A5F;
    font-feature-settings: 'clig' off, 'liga' off;
    
    /* [D] Body XS Reg */
    font-size: 14px;
    font-style: normal;
    font-weight: 400;
        word-break: break-word;
    }   

</style>


@if (Model.HasSearched)
{
    @if (!Model.Studies.Any())
    {
        <div class="govuk-inset-text">
            No studies match your search
        </div>
    }

    @if (Model.Studies.Count() > 1)
    {
        <div class="govuk-inset-text">
            @Model.Studies.Count() results match your search.
        </div>
    }

    @if (Model.Studies.Count() == 1)
    {
        <div class="govuk-inset-text">
            1 study matches your search.
        </div>
    }
}

@if (Model.HasBeenReset)
{
    <div class="govuk-inset-text">
        The search results have been reset and all studies are listed.
    </div>
}
@if (Model.Studies.Any())
{
    // TODO: Add default empty state to page control.
    <div class="study-card-container">
        @foreach (var item in Model.Studies)
        {
            <div class="study-card">
                <div class="study-card-info">
                    <div class="pill-container">
                        @if (item.CpmsId != null)
                        {
                            <div class="pill">
                                CPMS ID:&nbsp;
                                @Html.DisplayFor(modelItem => item.CpmsId)
                            </div>
                        }
                        <div class="pill">
                            Study ID:&nbsp;
                            @Html.DisplayFor(modelItem => item.Id)
                        </div>

                    </div>
                    <div class="study-name-container">
                        <h2 >@Html.DisplayFor(modelItem => item.StudyName)</h2>
                    </div>
                    <div class="study-contact-container">
                        <div class="study-contact">
                            <p class="govuk-body contact-text">
                                <strong>Main contact:&nbsp;</strong>
                                @Html.DisplayFor(modelItem => item.FullName)
                            </p>
                        </div>
                        <div class="study-email">
                            <p class="govuk-body contact-text">
                                <strong>Contact email:&nbsp;</strong>
                                @Html.DisplayFor(modelItem => item.EmailAddress)
                            </p>
                        </div>
                    </div>
                </div>

                <div class="study-card-actions">
                    <div class="study-card-recruited-numbers">
                        <p class="govuk-body govuk-!-margin-0">Recruited:</p>
                        <p class="govuk-heading-m govuk-!-margin-0 govuk-!-padding-0">
                            @if (item.IsRecruitingIdentifiableParticipants)
                            {
                                @Html.DisplayFor(modelItem => item.TotalRecruited)
                            }
                            else
                            {
                                @Html.DisplayFor(modelItem => item.LatestRecruitmentTotal)
                            }
                        </p>
                    </div>
                    @Html.ActionLink("View study", "Details", new { id = item.Id }, new { @class = "govuk-button" })
                </div>
            </div>
        }

    </div>

    <pagination for="Studies"/>
}
else if (!Model.HasSearched)
{
    <div class="no-studies-card">
        <h1 class="govuk-heading-l">No studies added</h1>
        <p class="govuk-body">
            @(Model.IsResearcher ? "You haven’t added any studies yet, please apply to add a study now" : "You haven’t added any studies yet, please add a study now")
        </p>
        @if (Model.IsResearcher)
        {
            @Html.ActionLink(" Apply to add a study", "TermsAndConditions", "Researcher", null, new { @class = "govuk-button" })
        }
        else
        {
            @Html.ActionLink(" Add study", "Create", "Study", null, new { @class = "govuk-button" })
        }
    </div>
}
