@model BPOR.Rms.Models.Filter.VolunteerFilterViewModel
@using BPOR.Rms.Views.ViewComponents
@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="govuk-grid-row">

    @if (Model.StudyId != null)
    {
        @await Component.InvokeAsync("Breadcrumbs", new List<BreadcrumbItem>
        {
            new("All Studies", "/Study/Index"),
            new("Study Page", $"/Study/Details/" + Model.StudyId),
            new("Find Volunteers", "")
        })
    }
    else
    {
        @await Component.InvokeAsync("Breadcrumbs", new List<BreadcrumbItem>
        {
            new("All Studies", "/Study/Index"),
            new("Find Volunteers", "")
        })
    }

 
</div>

@using (Html.BeginForm("HandleForms", "Filter", FormMethod.Post))
{
    <input type="hidden" asp-for="StudyId" value="@Model.StudyId" />
    <div class="govuk-grid-column-two-thirds">

        <h1 class="govuk-heading-xl">
            Select the criteria you want your volunteers to match
        </h1>

        @await Html.PartialAsync("Partials/_NotificationBanner", Model.Notification)

        @await Html.PartialAsync("Partials/_ErrorSummary", Model)

        <h2 class="govuk-heading-l">
            Research
        </h2>

        @await Html.PartialAsync("Partials/_StudySelection", Model)
        @await Html.PartialAsync("Partials/_VolunteerInclusionExclusionCriteria", Model)
        @await Html.PartialAsync("Partials/_AreasOfResearch", Model)
        @await Html.PartialAsync("Partials/_RegistrationDate", Model)
        @await Html.PartialAsync("Partials/_Location", Model)
        @await Html.PartialAsync("Partials/_Demographics", Model)

    </div>

    <div class="sticky-container">
        <div class="filter-count-container">
            <div>
                <h2 class="govuk-heading-l">
                    Volunteers matching criteria:
                </h2>

                <input type="hidden" asp-for="VolunteerCount" value="@Model.VolunteerCount" />
                <h2 class="govuk-heading-l" id="volunteerCount" aria-label="Volunteer count with current filters selected">
                @if(Model.VolunteerCount == 0 || Model.VolunteerCount == null)
                {
                    <span>-</span>
                }
                else
                {
                    <span>@Model.VolunteerCount</span>
                }
                </h2>
            </div>

            <div class="filter-buttons-container">
                @* <input type="submit" value="Search volunteers" class="govuk-button" /> *@
                <button type="submit" value="FilterVolunteers" name="action" class="govuk-button">
                    Filter Volunteers
                </button>
                @* @Html.ActionLink("Clear filters", "ClearFilters", "Filter", new { id = 1 }, new { @class = "govuk-button  govuk-button--secondary", data_module = "govuk-button" }) *@
                <button type="submit" class="govuk-button  govuk-button--secondary" data-module="govuk-button" value="ClearFilters" name="action">
                    Clear filters
                </button>

                <div class="divide-container"></div>

                @{
                    bool disabled = Model.VolunteerCount == 0 || Model.VolunteerCount == null;
                }

                <div class="filer-setup-campaign-btn">
                    <button id="btnSetupEmailCampaign" role="button" draggable="false" class="govuk-button-submit" data-module="govuk-button" disabled="@disabled" asp-controller="Filter" asp-action="SetupEmailCampaign">
                        Set up an email campaign
                        <svg class="govuk-button__start-icon" xmlns="http://www.w3.org/2000/svg" width="17.5" height="19" viewBox="0 0 33 40" aria-hidden="true" focusable="false">
                            <path fill="currentColor" d="M0 0h13l20 20-20 20H0l20-20z" />
                        </svg>
                    </button>
                </div>
            </div>
        </div>
    </div>
}


    
