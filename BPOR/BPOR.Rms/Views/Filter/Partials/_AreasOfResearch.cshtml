@* TODO: Make this control more reusable. Have a strongly typed model *@
@{
    var displayName = (ViewData["__AreasOfResearch_DisplayName"] as string);
    var areasOfResearch = (ViewData["__AreasOfResearch"] as IEnumerable<SelectListItem>) ?? [];
    var currentValues = (ViewData["__AreasOfResearch_CurrentValues"] as IEnumerable<string>) ?? [];
    var name = (ViewData["__AreasOfResearch_Name"] as string);
    var noneName = (ViewData["__AreasOfResearch_None_Name"] as string);
    var noneCurrentValue = (ViewData["__AreasOfResearch_None_CurrentValue"] as string) ?? string.Empty;
    int itemOffset = 0;
}

<div class="govuk-form-group">
    <fieldset class="govuk-fieldset">
        <legend class="govuk-fieldset__legend govuk-fieldset__legend--l">
            <h3 class="govuk-label govuk-label--l">@displayName</h3>
        </legend>
        <div id="location-hint" class="govuk-hint">
            Leave blank to include all volunteers and those who have not specified any areas of research. Enter one or more areas of research to refine by interests.
        </div>

        <input type="text" class="govuk-input nihr-option-search govuk-!-margin-bottom-1" id="searchInput" placeholder="Search..." data-option-class="area-of-research-option" data-announcement-id="areas-of-interest-announcement" data-selected-counter-id="selected-counter">
        <div id="selected-counter">
            @* TODO: add selected item count *@
        </div>
        <span id="areas-of-interest-announcement" class="govuk-visually-hidden" data-single="option found" data-multiple="options found" data-selected="selected" aria-live="polite"></span>
        <a href="#@areasOfResearch.Last().Value" class="govuk-skip-link start-of-options" data-module="govuk-skip-link">Skip to the end of the areas of research options list</a>

        <div class="govuk-checkboxes research-areas-list" id="areas-of-research-container" data-module="govuk-checkboxes">

            @if (!string.IsNullOrWhiteSpace(noneName))
            {
                itemOffset++;
                <div class="govuk-checkboxes__item area-of-research-option" data-search-value="none specified">
                    <input type="checkbox" class="govuk-checkboxes__input" id="option-none" name="@noneName" value="@Json.Serialize(true)" @(bool.Parse(noneCurrentValue) ? "checked" : "") />
                    <label for="option-none" class="govuk-label govuk-checkboxes__label"><i class="muted">None specified</i></label>
                </div>
            }
            @foreach (var option in areasOfResearch.Select((item, index) => (item, index: index + itemOffset)))
            {
                @if (option.index > 0 && option.index % 10 == 0) // Add skip link every 10 options
                {
                    <div class="govuk-checkboxes__item skip-link">
                        <a href="#@areasOfResearch.Last().Value" class="govuk-skip-link options-list" data-module="govuk-skip-link" aria-hidden="true">Skip to end</a>
                    </div>
                }

                <div class="govuk-checkboxes__item area-of-research-option" data-search-value="@option.item.Text.ToLowerInvariant()">
                    <input type="checkbox" class="govuk-checkboxes__input" id="@option.item.Value" name="@name" value="@option.item.Value" @(currentValues.Contains(option.item.Value) ? "checked" : "") />
                    <label for="@option.item.Value" class="govuk-label govuk-checkboxes__label">@option.item.Text</label>
                </div>
            }
        </div>
        <a href="#@areasOfResearch.First().Value" class="govuk-skip-link end-of-options" data-module="govuk-skip-link">Skip to the start of the areas of research options list</a>
    </fieldset>
</div>