@model BPOR.Rms.Models.Filter.VolunteerFilterViewModel

<div class="govuk-form-group">
    <fieldset class="govuk-fieldset">
        <legend class="govuk-fieldset__legend govuk-fieldset__legend--l">
            <h3 class="govuk-label govuk-label--l">@Html.DisplayNameFor(m => Model.SelectedHealthConditions)</h3>
        </legend>
        <div id="location-hint" class="govuk-hint">
            Leave blank to include all volunteers and those who have not specified any areas of research. Enter one or more areas of research to refine by interests.
        </div>

        <input type="text" class="govuk-input nihr-option-search govuk-!-margin-bottom-1" id="searchInput" placeholder="Search..." data-option-class="area-of-research-option" data-announcement-id="areas-of-interest-announcement" data-selected-counter-id="selected-counter">
        <div id="selected-counter">
            @* TODO: add selected item count *@
        </div>
        <span id="areas-of-interest-announcement" class="govuk-visually-hidden" data-single="option found" data-multiple="options found" data-selected="selected" aria-live="polite"></span>
        <a href="#@Model.HealthConditions.Last().Value" class="govuk-skip-link start-of-options" data-module="govuk-skip-link">Skip to the end of the areas of research options list</a>

        <div class="govuk-checkboxes research-areas-list" id="areas-of-research-container" data-module="govuk-checkboxes">
            @foreach (var option in Model.HealthConditions.Select((item, index) => (item, index)))
            {
                @if (option.index > 0 && option.index % 10 == 0) // Add skip link every 10 options
                {
                    <div class="govuk-checkboxes__item govuk-!-margin-bottom-1">
                        <a href="#@Model.HealthConditions.Last().Value" class="govuk-skip-link" data-module="govuk-skip-link">Skip to end</a>
                    </div>
                }

                if (Model.SelectedHealthConditions != null)
                {
                    <div class="govuk-checkboxes__item area-of-research-option" data-search-value="@option.item.Text.ToLowerInvariant()">
                        <input type="checkbox" class="govuk-checkboxes__input" id="@option.item.Value" name="SelectedHealthConditions" value="@option.item.Value" @(Model.SelectedHealthConditions.Select(x => x.ToString()).Contains(option.item.Value) ? "checked" : "") />
                        <label for="@option.item.Value" class="govuk-label govuk-checkboxes__label">@option.item.Text</label>
                    </div>
                }
                else
                {
                    <div class="govuk-checkboxes__item area-of-research-option" data-search-value="@option.item.Text.ToLowerInvariant()">
                        <input type="checkbox" class="govuk-checkboxes__input" id="@option.item.Value" name="SelectedHealthConditions" value="@option.item.Value" />
                        <label for="@option.item.Value" class="govuk-label govuk-checkboxes__label">@option.item.Text</label>
                    </div>
                }

            }
        </div>
        <a href="#@Model.HealthConditions.First().Value" class="govuk-skip-link end-of-options" data-module="govuk-skip-link">Skip to the start of the areas of research options list</a>
    </fieldset>
</div>