@model BPOR.Rms.Models.Email.SetupCampaignViewModel

<style>
    /* Mobile devices */
    @@media (max-width: 640px) {
        #volunteer-numbers  {
            width: 100%; /* Make input full width on mobile */
        }
        .govuk-form-group span {
            display: none; /* Hide span on mobile */
        }
    }

    /* Tablet devices - between 641px and 1024px */
    @@media (min-width: 641px) and (max-width: 1024px) {
        #volunteer-numbers  {
            width: 50%; /* Make input 50% width on tablet */
        }
        .govuk-form-group span {
            display: flex; /* Show span on tablet */
        }
    }

    /* Desktop and larger devices - more than 1024px */
    @@media (min-width: 1025px) {
        #volunteer-numbers {
            width: 30%; /* Make input 30% width on desktop */
        }
    }
</style>

<div class="govuk-form-group @(Html.ViewData.ModelState["TotalVolunteers"]?.Errors.Count > 0 ? "govuk-form-group--error" : "")">
    <label asp-for="TotalVolunteers" class="govuk-label" for="TotalVolunteers">
        @Html.DisplayNameFor(model => model.TotalVolunteers)
    </label>
    @if (Html.ViewData.ModelState["TotalVolunteers"]?.Errors.Count > 0)
    {
        <span id="TotalVolunteers-error" class="govuk-error-message">
            <span class="govuk-visually-hidden">Error:</span>
            @Html.ValidationMessageFor(model => model.TotalVolunteers)
        </span>
        <input asp-for="TotalVolunteers" class=" govuk-input govuk-input--error" id="TotalVolunteers" aria-describedby="TotalVolunteers-error"/>
        <span> / @Html.DisplayFor(modelItem => modelItem.MaxNumbers)</span>
    }
    else
    {
        <input asp-for="TotalVolunteers" class=" govuk-input" id="TotalVolunteers" value="@(Model.TotalVolunteers)"/>
        <span> / @Html.DisplayFor(modelItem => modelItem.MaxNumbers)</span>
    }
</div>
